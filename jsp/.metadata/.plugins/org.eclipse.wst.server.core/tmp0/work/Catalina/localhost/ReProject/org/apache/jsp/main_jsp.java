/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2015-08-09 06:56:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 CSS -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0-wip/css/bootstrap.min.css\">\r\n");
      out.write(" \r\n");
      out.write("<!-- 합쳐지고 최소화된 최신 자바스크립트 -->\r\n");
      out.write("<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0-wip/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.11.2.min.js\"></script>\r\n");
      out.write("<script language=\"javascript\" src=\"http://connect.facebook.net/ko_KR/all.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
String name = request.getParameter("name"); 
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function getMyProfile(){\r\n");
      out.write("\r\n");
      out.write("\tFB.api('/me',function(user){\r\n");
      out.write("\r\n");
      out.write("\tvar myName= user.name ;\r\n");
      out.write("\r\n");
      out.write("\t          var myEmail = user.email;\r\n");
      out.write("\r\n");
      out.write("\t                  var myId = user.id;\r\n");
      out.write("\r\n");
      out.write("\t });\r\n");
      out.write("\r\n");
      out.write("\tFB.api('/me/picture?type=large',function(data){\r\n");
      out.write("\r\n");
      out.write("\tvar myImg = data.data.url;\r\n");
      out.write("\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t \r\n");
      out.write("\r\n");
      out.write("\t \r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("var FBtoken = \"\";\r\n");
      out.write("\r\n");
      out.write("function loginFB(){\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("FB.login(function(response) {\r\n");
      out.write("\r\n");
      out.write("if (response.authResponse) {\r\n");
      out.write("\r\n");
      out.write("   FBtoken =  response.authResponse.accessToken;\r\n");
      out.write("\r\n");
      out.write("} else {    \r\n");
      out.write("\r\n");
      out.write("       }\r\n");
      out.write("\r\n");
      out.write("     }\r\n");
      out.write("\r\n");
      out.write(" , {scope: \"user_about_me,publish_stream,read_friendlists,offline_access,email,user_birthday\"} \r\n");
      out.write("\r\n");
      out.write(");\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function loginFB(){\r\n");
      out.write("\r\n");
      out.write("\tFB.login(function(response) {\r\n");
      out.write("\r\n");
      out.write("\tif (response.authResponse) {\r\n");
      out.write("\r\n");
      out.write("\t     // callback 영역입니다. 자신의 브라우저가 페북에 연동되면 여기로직을 처리 하게 되죠\r\n");
      out.write("\r\n");
      out.write("\t} else {\r\n");
      out.write("\r\n");
      out.write("\t     //오류가 났거나 연동이 실패 했을때 처리 하는부분..... \r\n");
      out.write("\r\n");
      out.write("\t       }\r\n");
      out.write("\r\n");
      out.write("\t     }\r\n");
      out.write("\r\n");
      out.write("\t , {scope: \"user_about_me,publish_stream,read_friendlists,offline_access,email,user_birthday\"} \r\n");
      out.write("\r\n");
      out.write("\t);\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("var fabceloginChk = 0;\r\n");
      out.write("\r\n");
      out.write("function loginFB(){\r\n");
      out.write("\r\n");
      out.write("\tif(fabceloginChk == 0){\r\n");
      out.write("\t\r\n");
      out.write("\tFB.login(function(response) {\r\n");
      out.write("\r\n");
      out.write("\tif (response.authResponse) {\r\n");
      out.write("\r\n");
      out.write(" \t\tfabceloginChk  = 1;\r\n");
      out.write("\r\n");
      out.write("\t} else {   \r\n");
      out.write("\r\n");
      out.write("\talert('로그인에 실패했습니다!!!');\r\n");
      out.write("\t\tfabceloginChk  = 0;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t       }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t     }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t , {scope: \"user_about_me,publish_stream,read_friendlists,offline_access,email,user_birthday\"} \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\tfunction nhello() {\t\t\t\t\r\n");
      out.write("\t\t   if(localStorage.getItem('ID') == null){\r\n");
      out.write("\t\t\t\t$('#nhello').html('로그인해주세요');\r\n");
      out.write("\t\t    }else{\r\n");
      out.write("\t\t\t\twindow.location.replace(\"main.jsp?name=\"+localStorage.getItem('ID'));\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction hello(){\r\n");
      out.write("\t\t\t\t$('#hello').html(localStorage.getItem('ID')+'님 환영합니다');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction login() {\r\n");
      out.write("\t\t\t\tlocation.href = \"/ReProject/login.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction closeAlert() {\r\n");
      out.write("\t\t\t\t$('#hello_close').hide();\r\n");
      out.write("\t\t}\r\n");
      out.write("</script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("window.fbAsyncInit = function() {\r\n");
      out.write("  FB.init({\r\n");
      out.write("\t  appId  : '/*사용하는 페북 앱의 id값 넣는곳... 이건 다른곳 찾아봐도 자세하게 나옵니다.*/', \r\n");
      out.write("\r\n");
      out.write("\t   status : true, // check login status\r\n");
      out.write("\r\n");
      out.write("\t   cookie : true, // enable cookies to allow the server to access the session\r\n");
      out.write("\r\n");
      out.write("\t   xfbml  : true, // parse XFBML\r\n");
      out.write("\r\n");
      out.write("\t   oauth  : true // enable OAuth 2.0   기본세팅입니다. 그냥 따라 쓰면 됩니다\r\n");
      out.write(" });\r\n");
      out.write("\r\n");
      out.write(" };\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write(" (function(d){\r\n");
      out.write("\r\n");
      out.write("    var js, id = 'facebook-jssdk'; if (d.getElementById(id)) {return;}\r\n");
      out.write("\r\n");
      out.write("    js = d.createElement('script'); \r\n");
      out.write("    js.id = id; js.async = true;\r\n");
      out.write("    js.src = \"//connect.facebook.net/en_US/all.js\";\r\n");
      out.write("    d.getElementsByTagName('head')[0].appendChild(js);\r\n");
      out.write("\r\n");
      out.write("  }(document));\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
if(name == null){
      out.write("\r\n");
      out.write("<ol class=\"breadcrumb\">\r\n");
      out.write("  <li><a href=\"#\" onclick='location.href=\"/ReProject/main.jsp\"'>Home</a></li>\r\n");
      out.write("  <li><a href=\"#\" onclick='location.href=\"/ReProject/boardList.jsp\"'>Board</a></li>\r\n");
      out.write("</ol>\r\n");
      out.write("<body onload=\"nhello()\">\r\n");
      out.write("<div class=\"alert alert-dismissable alert-success\" id=\"nhello_close\">\r\n");
      out.write("  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" onclick=\"login()\">로그인</button>\r\n");
      out.write("  <div id='nhello'></div>\r\n");
      out.write("</div>\r\n");
      out.write("<input type=\"button\" value=\"페이스북로그인!\" onclick=\"loginFB()\" />\r\n");
      out.write("</body>\r\n");
}else { 
      out.write("\r\n");
      out.write("<ol class=\"breadcrumb\">\r\n");
      out.write("  <li><a href=\"#\" onclick='location.href=\"/ReProject/main.jsp\"'>Home</a></li>\r\n");
      out.write("  <li><a href=\"#\" onclick='location.href=\"/ReProject/boardList.jsp\"'>Board</a></li>\r\n");
      out.write("  <li><a href=\"#\" onclick='location.href=\"/ReProject/boardList.jsp\"'>Board</a></li>\r\n");
      out.write("</ol>\r\n");
      out.write("<body onload=\"hello()\">\r\n");
      out.write("<div class=\"alert alert-dismissable alert-success\" id=\"hello_close\">\r\n");
      out.write("  <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\" onclick=\"closeAlert()\">x</button>\r\n");
      out.write("  <div id='hello'></div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("<input type=\"button\" value=\"페이스북로그인!\" onclick=\"loginFB()\" />\r\n");
} 
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
