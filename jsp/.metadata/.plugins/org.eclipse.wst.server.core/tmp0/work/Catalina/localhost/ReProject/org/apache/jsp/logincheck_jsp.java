/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2015-08-06 04:17:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import db.DBconnect;

public final class logincheck_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.11.2.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body onload=\"loginchk()\">\r\n");

	String id = request.getParameter("id");
String passwd = request.getParameter("password");
DBconnect dbc = new DBconnect();

int loginResult = dbc.login(id, passwd);
System.out.println(request.getContextPath());

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction loginchk() {\r\n");
      out.write("\t\tvar chk = ");
      out.print(loginResult);
      out.write(";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tswitch(chk){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t// 정상 로그인\r\n");
      out.write("\t\t\tcase 0:\r\n");
      out.write("\t\t\t\tsessionStorage.setItem(\"ID\", \"");
      out.print(id);
      out.write("\")\r\n");
      out.write("\t\t\t\tlocation.href = \"/ReProject/main.jsp\";\t\t\t\t\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 비밀번호 틀림\t\r\n");
      out.write("\t\t\tcase 1:\r\n");
      out.write("\t\t\t\talert('비밀번호가 틀렸습니다.');\r\n");
      out.write("\t\t\t\tlocation.href = \"/ReProject/login.jsp?type=1&id=");
      out.print(id);
      out.write("\"\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t// 아이디 없음\r\n");
      out.write("\t\t\tcase 2:\r\n");
      out.write("\t\t\t\talert('");
      out.print(id);
      out.write("는없는아이디입니다'); \r\n");
      out.write("\t\t\t\tlocation.href = \"/ReProject/login.jsp\"\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t// 서버 상태 안좋음\r\n");
      out.write("\t\t\tcase 3:\r\n");
      out.write("\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
